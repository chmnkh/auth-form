{"version":3,"sources":["view/components/Link/index.tsx","view/components/TextInput/index.tsx","view/components/Checkbox/index.tsx","view/components/Button/index.tsx","view/components/FormError/index.tsx","view/components/AuthForm/index.tsx","api/auth.ts","view/validators/validateIsRequired.ts","view/components/AuthPage/index.tsx","view/validators/validateIsEmail.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["b","block","Link","children","blank","rest","blankProps","target","rel","className","TextInput","onChange","label","error","link","href","text","e","value","Checkbox","checked","disabled","type","Button","showPreloader","FormError","undefined","FORGOT_PASSWORD_LINK","AuthForm","formState","isRequesting","onSubmit","submitError","errors","onResetErrors","email","password","dontRemember","preventDefault","noValidate","makeOnChange","field","length","CORRECT_USER","login","_","a","Promise","resolve","reject","isCorrectUser","setTimeout","response","validateIsRequired","AuthPage","useState","setIsRequesting","authFormState","setAuthFormState","authFormErrors","setAuthFormErrors","setSubmitError","title","state","allErrors","validateForm","Object","values","some","fieldErrors","AuthAPI","test","filter","Boolean","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccebbe72.chunk.js","sourcesContent":["import { AnchorHTMLAttributes } from \"react\";\nimport block from \"bem-cn-lite\";\nimport \"./index.scss\";\n\ntype Props = AnchorHTMLAttributes<HTMLAnchorElement> & {\n  blank?: boolean;\n};\n\nconst b = block(\"link\");\n\nfunction Link({ children, blank, ...rest }: Props) {\n  const blankProps = blank\n    ? { target: \"_blank\", rel: \"noopener noreferrer\" }\n    : {};\n\n  return (\n    <a className={b()} {...rest} {...blankProps}>\n      {children}\n    </a>\n  );\n}\n\nexport { Link };\n","import { InputHTMLAttributes } from \"react\";\nimport block from \"bem-cn-lite\";\nimport { Link } from \"../Link\";\n\nimport \"./index.scss\";\n\ntype InputWithoutOnChange = Omit<\n  InputHTMLAttributes<HTMLInputElement>,\n  \"onChange\"\n>;\n\ntype Props = InputWithoutOnChange & {\n  label: string;\n  link?: { text: string; href: string };\n  error?: string;\n  onChange(value: string): void;\n};\n\nconst b = block(\"text-input\");\n\nfunction TextInput({ onChange, label, error, link, ...rest }: Props) {\n  return (\n    <label className={b()}>\n      <div className={b(\"upper-part\")}>\n        <div className={b(\"label\")}>{label}</div>\n        {link && (\n          <Link href={link.href} blank>\n            {link.text}\n          </Link>\n        )}\n      </div>\n      <input\n        className={b(\"input\", { \"with-error\": !!error })}\n        onChange={(e) => onChange(e.target.value)}\n        {...rest}\n      />\n      <div className={b(\"error\")}>{error}</div>\n    </label>\n  );\n}\n\nexport type { Props as TextInputProps };\nexport { TextInput };\n","import block from \"bem-cn-lite\";\nimport \"./index.scss\";\n\nconst b = block(\"checkbox\");\n\ntype Props = {\n  checked: boolean;\n  label: string;\n  disabled: boolean;\n  onChange(value: boolean): void;\n};\n\nfunction Checkbox({ checked, onChange, label, disabled }: Props) {\n  return (\n    <label className={b()}>\n      <input\n        checked={checked}\n        onChange={(e) => onChange(e.target.checked)}\n        disabled={disabled}\n        type=\"checkbox\"\n      />\n      {label}\n    </label>\n  );\n}\n\nexport { Checkbox };\n","import block from \"bem-cn-lite\";\nimport { ButtonHTMLAttributes } from \"react\";\n\nimport \"./index.scss\";\n\ntype Props = ButtonHTMLAttributes<HTMLButtonElement> & {\n  showPreloader: boolean;\n};\n\nconst b = block(\"button\");\n\nfunction Button({ children, showPreloader, ...rest }: Props) {\n  return (\n    <button {...rest} className={b()} disabled={showPreloader}>\n      {children}\n    </button>\n  );\n}\n\nexport { Button };\n","import block from \"bem-cn-lite\";\nimport \"./index.scss\";\n\ntype Props = {\n  error?: string;\n};\n\nconst b = block(\"form-error\");\n\nfunction FormError({ error }: Props) {\n  return error !== undefined ? <div className={b()}>{error}</div> : null;\n}\nexport { FormError };\n","import block from \"bem-cn-lite\";\n\nimport { TextInput } from \"../TextInput\";\nimport { Checkbox } from \"../Checkbox\";\nimport { Button } from \"../Button\";\nimport { FormError } from \"../FormError\";\n\nimport \"./index.scss\";\n\ntype FormState = {\n  email: string;\n  password: string;\n  dontRemember: boolean;\n};\n\ntype FormErrors = Partial<Record<keyof FormState, string[]>>;\n\ntype Props = {\n  formState: FormState;\n  isRequesting: boolean;\n  errors: FormErrors;\n  submitError?: string;\n  onResetErrors(field: keyof FormState): void;\n  onChange(state: FormState): void;\n  onSubmit(state: FormState): void;\n};\n\nconst b = block(\"auth-form\");\nconst FORGOT_PASSWORD_LINK = {\n  text: \"Forgot password?\",\n  href: \"https://ih1.redbubble.net/image.1476180554.5690/flat,750x,075,f-pad,750x1000,f8f8f8.jpg\",\n};\n\nfunction AuthForm({\n  formState,\n  onChange,\n  isRequesting,\n  onSubmit,\n  submitError,\n  errors,\n  onResetErrors,\n}: Props) {\n  const { email, password, dontRemember } = formState;\n\n  return (\n    <form className={b()} onSubmit={handleFormSubmit} noValidate>\n      <TextInput\n        label=\"email\"\n        value={email}\n        onChange={makeOnChange(\"email\")}\n        error={errors.email?.[0]}\n        disabled={isRequesting}\n        type=\"email\"\n      />\n      <TextInput\n        label=\"password\"\n        value={password}\n        onChange={makeOnChange(\"password\")}\n        error={errors.password?.[0]}\n        disabled={isRequesting}\n        type=\"password\"\n        link={FORGOT_PASSWORD_LINK}\n      />\n      <Checkbox\n        checked={dontRemember}\n        onChange={makeOnChange(\"dontRemember\")}\n        disabled={isRequesting}\n        label=\"Don't remember me\"\n      />\n      <Button type=\"submit\" showPreloader={isRequesting}>\n        Sign in\n      </Button>\n      <FormError error={submitError} />\n    </form>\n  );\n\n  function handleFormSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    onSubmit(formState);\n  }\n\n  function makeOnChange<T extends keyof FormState>(field: T) {\n    return (value: FormState[T]) => {\n      if (errors[field]?.length) {\n        onResetErrors(field);\n      }\n      onChange({ ...formState, [field]: value });\n    };\n  }\n}\n\nexport type { FormState as AuthFormState, FormErrors as AuthFormErrors };\nexport { AuthForm };\n","const CORRECT_USER = {\n  email: \"e@ma.il\",\n  password: \"Qwe_123\",\n};\n\nasync function login(email: string, password: string, _: boolean) {\n  // simulate server response\n  const response = await new Promise<\"Success\">((resolve, reject) => {\n    const isCorrectUser =\n      CORRECT_USER.email === email && CORRECT_USER.password === password;\n    setTimeout(\n      () =>\n        isCorrectUser ? resolve(\"Success\") : reject(\"Wrong email or password\"),\n      1000\n    );\n  });\n\n  return response;\n}\n\nexport { login };\n","export function validateIsRequired(value: string) {\n  return value ? \"\" : \"The field is required\";\n}\n","import { useState } from \"react\";\nimport block from \"bem-cn-lite\";\n\nimport { AuthForm, AuthFormErrors, AuthFormState } from \"../AuthForm\";\nimport * as AuthAPI from \"../../../api/auth\";\nimport { validateIsRequired } from \"../../validators/validateIsRequired\";\nimport { validateIsEmail } from \"../../validators/validateIsEmail\";\n\nimport \"./index.scss\";\n\nconst b = block(\"auth-page\");\n\nfunction AuthPage() {\n  const [isRequesting, setIsRequesting] = useState(false);\n  const [authFormState, setAuthFormState] = useState<AuthFormState>({\n    email: \"\",\n    password: \"\",\n    dontRemember: false,\n  });\n  const [authFormErrors, setAuthFormErrors] = useState<AuthFormErrors>({});\n  const [submitError, setSubmitError] = useState<string | undefined>(undefined);\n\n  return (\n    <div className={b()}>\n      <div className={b(\"content\")}>\n        <h1 className={b(\"page-title\")}>\n          Sign in to\n          <span className={b(\"app-name\")} title=\"Somewhere\">\n            {\" \"}\n            Куда-то\n          </span>\n        </h1>\n        <div className={b(\"form\")}>\n          <AuthForm\n            formState={authFormState}\n            onChange={setAuthFormState}\n            onSubmit={handleSubmit}\n            isRequesting={isRequesting}\n            submitError={submitError}\n            errors={authFormErrors}\n            onResetErrors={handleResetErrors}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  // Normally (in a big project, where managing complexity is more important)\n  // I wouldn't import & call API in a component directly.\n  // Instead, I'd handle that in a separate layer of the app.\n  // Components would just mostly render something and that's all they do & know.\n  // Here I don't do that to not overcomplicate things.\n\n  async function handleSubmit(state: AuthFormState) {\n    const allErrors = validateForm(state);\n    const isInvalid = Object.values(allErrors).some(\n      (fieldErrors) => fieldErrors?.length\n    );\n    if (isInvalid) {\n      setAuthFormErrors(allErrors);\n    } else {\n      setIsRequesting(true);\n      setSubmitError(undefined);\n      try {\n        await AuthAPI.login(state.email, state.password, state.dontRemember);\n      } catch (error) {\n        setSubmitError(error);\n      } finally {\n        setIsRequesting(false);\n      }\n    }\n  }\n\n  function handleResetErrors(field: keyof AuthFormState) {\n    setAuthFormErrors({ ...authFormErrors, [field]: [] });\n  }\n}\n\nfunction validateForm({ email, password }: AuthFormState) {\n  const errors: Partial<Record<keyof AuthFormState, string[]>> = {\n    email: [validateIsRequired(email), validateIsEmail(email)].filter(Boolean),\n    password: [validateIsRequired(password)].filter(Boolean),\n  };\n\n  return errors;\n}\n\nexport { AuthPage };\n","export function validateIsEmail(value: string) {\n  return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(\n    value\n  )\n    ? \"\"\n    : \"Email is invalid\";\n}\n","import { AuthPage } from \"./view/components/AuthPage\";\n\nfunction App() {\n  return <AuthPage />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}